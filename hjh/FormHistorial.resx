<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAMCAgMCAgMDAwMEAwMEBQgFBQQEBQoHBwYIDAoMDAsKCwsN
        DhIQDQ4RDgsLEBYQERMUFRUVDA8XGBYUGBIUFRT/2wBDAQMEBAUEBQkFBQkUDQsNFBQUFBQUFBQUFBQU
        FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBT/wAARCADaANoDASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD9UmIHJqJWeQjkAdyO9LkyHAOFHU+tSYwMCgBaKKKACmlwDgmn
        VG4OcigBysG6U6o41Kkk+lSUAFFFFABURZ2YqMD3pWcsdq/ifSnKu0Yzn60AKOOM0tFFABSMwXk0tMcE
        9KAFDgnAp1RKrbgT+NS0AFFFFABUcjkMAoBJpXkxwOW9KI1KjJOSetACqNo5OT1p1FFABSE4paawyuKA
        EEgNPqEK1SbaAFCgDA6UtFFABRRRQAUUUUAFFFFABRRRQA1UCDgU6iigAooooAKKKKACiiigAooooAaE
        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
</value>
  </data>
</root>